@using MatBlazor;
@inherits Base.Draggable<Weaver.Data.Models.NumericField>;

<MatNumericUpDownField Value="@Component.MappedValue"
                       Label="@Component.Label"
                       DecimalPlaces="@Component.DecimalPlaces"
                       Step="@Component.Step"
                       FieldType="@FieldType"
                       @onchange="OnValueChanged" />

@code {
    private Task OnValueChanged(ChangeEventArgs e)
    {
        Component.MappedValue = (double)e.Value;
        return ComponentChanged.InvokeAsync(Component);
    }

    public MatNumericUpDownFieldType FieldType
    {
        get
        {
            switch (Component.FieldType)
            {
                case Data.Models.NumericType.Numeric:
                    return MatNumericUpDownFieldType.Numeric;
                case Data.Models.NumericType.Currency:
                    return MatNumericUpDownFieldType.Currency;
                case Data.Models.NumericType.Percent:
                    return MatNumericUpDownFieldType.Percent;
                default:
                    throw new Exception("unhandled numeric type");
            }
        }
    }
}